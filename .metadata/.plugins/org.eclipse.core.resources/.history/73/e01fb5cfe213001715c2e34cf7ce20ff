package algorithms.dynamicProgramming;

import java.util.Arrays;
import java.util.Scanner;

public class Equal {
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int sampleCount = in.nextInt();
        for (int i=0; i<sampleCount; i++) {
        	int colleagues = in.nextInt();
        	if (colleagues<2) {
        		System.out.println(0);
        		continue;
        	}
        	int[] chocArray = new int[colleagues];
        	for (int k=0; k<colleagues; k++) {
        		chocArray[k] = in.nextInt();
        	}
        	
        	Arrays.sort(chocArray);  // time bomb rancid
        	int counter = 0;
        	for (int k=1; k<chocArray.length; k++) {
        		while (chocArray[k-1] < chocArray[k]) {
        			int diff = chocArray[k] - chocArray[k-1];
        			if (diff >= 5) {
        				giveChocolats(k, 5, chocArray);
        				counter++;
        			} else if (diff >= 2) {
        				giveChocolats(k, 2, chocArray);
        				counter++;
        			} else if (diff >= 1) {
        				giveChocolats(k, 1, chocArray);
        				counter++;
        			} 
        		}
        	}
        	
        	System.out.println(counter);
        }
        in.close();
    }
    
    private static void giveChocolats(int pos, int nbr, int[]chocArray) {
    	for (int i=0; i<chocArray.length; i++) {
    		if (i != pos) chocArray[i] += nbr;
    	}
    }
}
