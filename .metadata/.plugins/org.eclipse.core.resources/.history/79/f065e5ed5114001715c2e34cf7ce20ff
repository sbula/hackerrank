package algorithms.GraphTheory;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

public class EvenTree {
    public static void main(String[] args) {
    	Map<Integer, List<Integer>> tree = new HashMap<Integer, List<Integer>>(); 
    	Scanner in = new Scanner(System.in);
    	int v = in.nextInt();
    	int e = in.nextInt();
    	
    	while(in.hasNext()) {
    		int edgeFrom = in.nextInt();
    		int edgeTo = in.nextInt();
    		if (!tree.containsKey(edgeFrom)) {
    			tree.put(edgeFrom, new ArrayList<Integer>());
    		}
    		
    		tree.get(edgeFrom).add(edgeTo);
    	}
    	
    	in.close();
    	
    	int res = verticesCounter(1, tree);
    	
    	System.out.println(res);
    }
    
    private static int verticesCounter(int root, Map<Integer, List<Integer>> tree) {
    	
    }
}
