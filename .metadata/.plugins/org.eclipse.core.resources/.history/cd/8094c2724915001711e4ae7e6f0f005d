package algorithms.sorting;

import java.util.Scanner;

public class QuicksortInPlace {
    public static void main(String[] args) {
    	Scanner in = new Scanner(System.in);
    	int N=in.nextInt();
        
        int[] input = new int[N];
    	for (int i=0; i<N; i++) {
    		input[i] = in.nextInt();
    	}
    	in.close();
    	
    	sort(input, 0, input.length-1);
    }


    private static void sort(int[] arr, int start, int end) {
    	int indLess = start-1;
    	for (int i=start; i<end; i++) {
    		if (arr[i]<arr[end]) swap(arr, ++indLess, i);
    	}
    	swap(arr, ++indLess, end);
    	
    	if (2<indLess)       sort(arr, 0, indLess-1);
    	if (indLess+2 < end) sort(arr, indLess+1, end);
    	
    	if (end-start>2) {
    		StringBuilder sb = new StringBuilder();
    		appendToString(sb, arr);
    		System.out.println(sb.toString());
    	}
    }
    
    private static void swap(int[] arr, int i1, int i2) {
    	int tmp = arr[i1];
    	arr[i1] = arr[i2];
    	arr[i2] = tmp;
    }
    
    private static void appendToString(StringBuilder sb, int[] arr) {
    	for (int elem : arr) {
    		if (sb.length()>0) sb.append(" ");
    		sb.append(elem);
    	}
    }
}
