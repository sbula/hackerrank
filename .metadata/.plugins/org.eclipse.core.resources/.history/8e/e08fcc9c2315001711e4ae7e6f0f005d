package algorithms.implementation;

import java.util.Arrays;
import java.util.Scanner;

public class AlmostSorted {
	public static void main(String[] args) {
		Scanner in = new Scanner(System.in);
		int n = in.nextInt();

		int[] input = new int[n];
		int[] sorted = new int[n];
		for (int i=0; i<n; i++) {
			input[i] = in.nextInt();
			sorted[i] = input[i];
		}
		in.close();
		
		Arrays.sort(sorted);

		int index1 = -1;
		int index2 = -1;
		int index3 = -1;
		boolean hasMultiple = false;
		for (int i=0; i<n; i++) {
			int diff = input[i] - sorted[i];
			
			
			if (input[i] == sorted[i]) continue;
			
			if (index1<0) {
				index1 = i;
			} else if (index2<0) {
				index2 = i;
			} else if (index2+1 == i) {
				index2 = i;
				hasMultiple = true;
			} else {
				System.out.println("no");
				return;
			}
		}
		
		if (index1<0) {
			System.out.println("yes");
		} else if (!hasMultiple) {
			if (input[index1] == sorted[index2]) {
				System.out.println("yes");
				System.out.println("swap " + (index1+1) + " " + (index2+1));
			}
		} else if ((index1==0 || input[index1-1] <= input[index2]) && (index2==n-1 || input[index1] <= input[index2+1])) {
			for (int i=index1; i<index2; i++) {
				if (input[i] <= input[i+1]) {
					System.out.println("no");
					return;
				}
			}

			System.out.println("yes");
			System.out.println("reverse " + (index1+1) + " " + (index2+1));
		}
	}
}
